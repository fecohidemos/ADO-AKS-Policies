# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# trigger:
#   branches:
#     include:
#     - main
#   paths:
#     exclude:
#     - policies/*

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '30dd7e92-a4ad-446e-a91c-9515c64125cb'
  imageRepository: 'nodejsapp'
  containerRegistry: 'adoakscr.azurecr.io'
  dockerfilePath: 'node/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'adoakscr1902589d-auth'
  waitForScanResultsAfterPushInMinutes: '5'
  azureSubName: 'ado-aks-policy-poc'
  kubernetesServiceConnection: 'staging-cluster'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Name of the new namespace being created to deploy the PR changes.
  k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

stages:
- stage: Deploy
  displayName: Deploy stage
  
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'fecohidemosADOAKSPolicies.default'
    strategy:
      runOnce:
        deploy:
          steps:          
          - upload: manifests
            artifact: manifests

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment-nginx.yml
                $(Pipeline.Workspace)/manifests/service-nginx.yml